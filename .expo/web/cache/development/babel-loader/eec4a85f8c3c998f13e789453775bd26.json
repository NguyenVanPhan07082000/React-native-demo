{"ast":null,"code":"import { useAppSelector, useAppDispatch } from \"../../../hook/useRedux\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SocketCustom = function SocketCustom(Props) {\n  var currentUserId = useAppSelector(function (state) {\n    return state.common.currentUserOnline;\n  });\n  var dispatch = useAppDispatch();\n\n  return _jsx(_Fragment, {});\n};\nexport default SocketCustom;","map":{"version":3,"names":["useAppSelector","useAppDispatch","SocketCustom","Props","currentUserId","state","common","currentUserOnline","dispatch"],"sources":["E:/Source Code/Oryza-ReactNative-Core/src/component/common/socket/index.tsx"],"sourcesContent":["import { memo, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { SERVER_DOMAIN } from 'src/contant';\r\nimport { useAppSelector, useAppDispatch } from 'src/hook/useRedux';\r\n\r\nexport interface TestProps {}\r\n\r\nconst SocketCustom = (Props: TestProps) => {\r\n    // socket newEventLog\r\n    const currentUserId = useAppSelector((state) => state.common.currentUserOnline);\r\n    const dispatch = useAppDispatch();\r\n\r\n    // useEffect(() => {\r\n    //     const s = io(SERVER_DOMAIN, { withCredentials: true, transports: ['websocket'] });\r\n\r\n    //     if (currentUserId) {\r\n    //         s.on('connect', () => {});\r\n    //         s.on('join', (idSocket: any) => {\r\n    //             s.emit('join', { SocketId: idSocket, UserId: currentUserId.ID });\r\n    //         });\r\n\r\n    //         s.on('sendNotify', async (data: any) => {\r\n    //             console.log('-----------------------');\r\n    //             // console.log('sendNotify: ', data);\r\n    //         });\r\n    //     }\r\n    // }, []);\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default SocketCustom;\r\n"],"mappings":"AAGA,SAASA,cAAc,EAAEC,cAAc;AAA4B;AAAA;AAInE,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAgB,EAAK;EAEvC,IAAMC,aAAa,GAAGJ,cAAc,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACC,MAAM,CAACC,iBAAiB;EAAA,EAAC;EAC/E,IAAMC,QAAQ,GAAGP,cAAc,EAAE;;EAkBjC,OAAO,mBAAK;AAChB,CAAC;AAED,eAAeC,YAAY"},"metadata":{},"sourceType":"module"}