{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { rootReduter } from \"./reducer\";\nexport var store = configureStore({\n  reducer: _objectSpread({}, rootReduter),\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    });\n  }\n});\nexport * from \"./reducer/commonSlice\";","map":{"version":3,"names":["configureStore","rootReduter","store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"sources":["E:/Source Code/Oryza-ReactNative-Core/src/redux/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { rootReduter } from './reducer';\r\n\r\nexport const store = configureStore({\r\n    reducer: { ...rootReduter },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: false,\r\n        }),\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// export dispatch\r\n\r\nexport * from './reducer/commonSlice';\r\n"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,KAAK,GAAGF,cAAc,CAAC;EAChCG,OAAO,oBAAOF,WAAP,CADyB;EAEhCG,UAAU,EAAE,oBAACC,oBAAD;IAAA,OACRA,oBAAoB,CAAC;MACjBC,iBAAiB,EAAE;IADF,CAAD,CADZ;EAAA;AAFoB,CAAD,CAA5B;AAeP"},"metadata":{},"sourceType":"module"}