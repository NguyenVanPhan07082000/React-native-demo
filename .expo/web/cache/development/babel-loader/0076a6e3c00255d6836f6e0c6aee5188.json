{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar storeData = function () {\n  var _ref = _asyncToGenerator(function* (key, value) {\n    try {\n      yield AsyncStorage.setItem(key, value);\n    } catch (e) {}\n  });\n\n  return function storeData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getData = function () {\n  var _ref2 = _asyncToGenerator(function* (key) {\n    try {\n      var value = yield AsyncStorage.getItem(key);\n\n      if (value !== null && value !== undefined) {\n        return value;\n      } else {\n        return null;\n      }\n    } catch (e) {\n      return null;\n    }\n  });\n\n  return function getData(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar removeValue = function () {\n  var _ref3 = _asyncToGenerator(function* (key) {\n    try {\n      yield AsyncStorage.removeItem(key);\n    } catch (e) {}\n\n    console.log('Done.');\n  });\n\n  return function removeValue(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport var localStore = {\n  store: storeData,\n  get: getData,\n  remove: removeValue\n};","map":{"version":3,"names":["AsyncStorage","storeData","key","value","setItem","e","getData","getItem","undefined","removeValue","removeItem","console","log","localStore","store","get","remove"],"sources":["E:/Source Code/Oryza-ReactNative-Core/src/contant/localStore.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst storeData = async (key: string, value: string) => {\r\n    try {\r\n        await AsyncStorage.setItem(key, value);\r\n    } catch (e) {\r\n        // saving error\r\n    }\r\n};\r\n\r\nconst getData = async (key: string) => {\r\n    try {\r\n        const value = await AsyncStorage.getItem(key);\r\n        if (value !== null && value !== undefined) {\r\n            return value;\r\n            // value previously stored\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (e) {\r\n        return null;\r\n        // error reading value\r\n    }\r\n};\r\n\r\nconst removeValue = async (key: string) => {\r\n    try {\r\n        await AsyncStorage.removeItem(key);\r\n    } catch (e) {\r\n        // remove error\r\n    }\r\n\r\n    console.log('Done.');\r\n};\r\n\r\nexport const localStore = { store: storeData, get: getData, remove: removeValue };\r\n"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,SAAS;EAAA,6BAAG,WAAOC,GAAP,EAAoBC,KAApB,EAAsC;IACpD,IAAI;MACA,MAAMH,YAAY,CAACI,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B,CAAN;IACH,CAFD,CAEE,OAAOE,CAAP,EAAU,CAEX;EACJ,CANc;;EAAA,gBAATJ,SAAS;IAAA;EAAA;AAAA,GAAf;;AAQA,IAAMK,OAAO;EAAA,8BAAG,WAAOJ,GAAP,EAAuB;IACnC,IAAI;MACA,IAAMC,KAAK,SAASH,YAAY,CAACO,OAAb,CAAqBL,GAArB,CAApB;;MACA,IAAIC,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKK,SAAhC,EAA2C;QACvC,OAAOL,KAAP;MAEH,CAHD,MAGO;QACH,OAAO,IAAP;MACH;IACJ,CARD,CAQE,OAAOE,CAAP,EAAU;MACR,OAAO,IAAP;IAEH;EACJ,CAbY;;EAAA,gBAAPC,OAAO;IAAA;EAAA;AAAA,GAAb;;AAeA,IAAMG,WAAW;EAAA,8BAAG,WAAOP,GAAP,EAAuB;IACvC,IAAI;MACA,MAAMF,YAAY,CAACU,UAAb,CAAwBR,GAAxB,CAAN;IACH,CAFD,CAEE,OAAOG,CAAP,EAAU,CAEX;;IAEDM,OAAO,CAACC,GAAR,CAAY,OAAZ;EACH,CARgB;;EAAA,gBAAXH,WAAW;IAAA;EAAA;AAAA,GAAjB;;AAUA,OAAO,IAAMI,UAAU,GAAG;EAAEC,KAAK,EAAEb,SAAT;EAAoBc,GAAG,EAAET,OAAzB;EAAkCU,MAAM,EAAEP;AAA1C,CAAnB"},"metadata":{},"sourceType":"module"}