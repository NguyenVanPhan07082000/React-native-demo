{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createBottomTabNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Home login!\"\n    }), _jsx(Button, {\n      title: \"click here\",\n      onPress: navigation.navigate('home')\n    })]\n  });\n};\nvar ProfileScreen = function ProfileScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings! login\"\n    })\n  });\n};\nvar SettingScreen = function SettingScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings! login\"\n    })\n  });\n};\nvar NotificationScreen = function NotificationScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Notification! login\"\n    })\n  });\n};\nvar LoginComponent = function LoginComponent() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    click = _useState2[0],\n    setClick = _useState2[1];\n  var onPress = function onPress() {\n    return setClick(!click);\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n            var iconName = '';\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Settings') {\n              iconName = 'setting';\n            } else if (route.name === 'Profile') {\n              iconName = 'profile';\n            } else {\n              iconName = 'notification';\n            }\n\n            return _jsx(AntDesign, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Notification\",\n        component: NotificationScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: SettingScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      })]\n    })\n  });\n};\nexport default LoginComponent;","map":{"version":3,"names":["React","useState","NavigationContainer","createBottomTabNavigator","AntDesign","Stack","HomeScreen","navigation","flex","justifyContent","alignItems","navigate","ProfileScreen","SettingScreen","NotificationScreen","LoginComponent","click","setClick","onPress","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"sources":["E:/Source Code/Oryza-ReactNative-Core/src/screen/login.tsx"],"sourcesContent":["import { Button, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nconst Stack = createBottomTabNavigator();\r\n\r\nconst HomeScreen = ({ navigation }: any) => {\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>Home login!</Text>\r\n            <Button title=\"click here\" onPress={navigation.navigate('home')}></Button>\r\n        </View>\r\n    );\r\n};\r\nconst ProfileScreen = () => {\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>Settings! login</Text>\r\n        </View>\r\n    );\r\n};\r\nconst SettingScreen = () => {\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>Settings! login</Text>\r\n        </View>\r\n    );\r\n};\r\nconst NotificationScreen = () => {\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>Notification! login</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst LoginComponent = () => {\r\n    const [click, setClick] = useState(true);\r\n    const onPress = () => setClick(!click);\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator\r\n                screenOptions={({ route }) => ({\r\n                    tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName = '';\r\n\r\n                        if (route.name === 'Home') {\r\n                            iconName = 'home';\r\n                        } else if (route.name === 'Settings') {\r\n                            iconName = 'setting';\r\n                        } else if (route.name === 'Profile') {\r\n                            iconName = 'profile';\r\n                        } else {\r\n                            iconName = 'notification';\r\n                        }\r\n\r\n                        // You can return any component that you like here!\r\n                        return <AntDesign name={iconName} size={size} color={color} />;\r\n                    },\r\n                    tabBarActiveTintColor: 'tomato',\r\n                    tabBarInactiveTintColor: 'gray',\r\n                })}\r\n            >\r\n                <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n                <Stack.Screen name=\"Notification\" component={NotificationScreen} />\r\n                <Stack.Screen name=\"Settings\" component={SettingScreen} />\r\n                <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n};\r\n\r\nexport default LoginComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}